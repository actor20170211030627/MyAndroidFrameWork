apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao' // apply plugin

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        applicationId "com.actor.sample"
        minSdkVersion       rootProject.ext.android.minSdkVersion
        targetSdkVersion    rootProject.ext.android.targetSdkVersion
        versionCode         rootProject.ext.android.versionCode
        versionName         rootProject.ext.android.versionName
        multiDexEnabled true

        //在 defaultConfig { 中添加ndk
        ndk {
            //"armeabi", "armeabi-v7a", "x86","arm64-v8a","x86_64", 'mips', 'mips64'
            abiFilters "armeabi"
        }
        //清单文件替换, 添加在 defaultConfig { 中
        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "0cf598cd297e3f86949e40f5", //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]
    }
    //添加so库,与buildTypes { 同级
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    signingConfigs {
        release {
            keyAlias 'actor'
            keyPassword '123456'
            storeFile file('actorKey.jks')
            storePassword '123456'
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release//debug 使用 release 签名
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    //Lambda表达式, 在android节点内添加
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    greendao {
        schemaVersion 1                 //指定数据库schema版本号，迁移等操作会用到
        daoPackage 'com.greendao.gen'   //dao的包名，包名默认是entity所在的包
        targetGenDir 'src/main/java'    //生成数据库文件的目录
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation rootProject.ext.dependencies.constraint_layout

    //https://github.com/google/flexbox-layout
    implementation 'com.google.android:flexbox:1.0.0'

    //https://github.com/JakeWharton/butterknife
    implementation 'com.jakewharton:butterknife:10.2.3'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'

    //https://gitee.com/actor20170211030627/MyAndroidFrameWork
    implementation project(path: ':myandroidframework')
//    implementation 'com.gitee.actor20170211030627.MyAndroidFrameWork:myandroidframework:2.0.3'

    //https://github.com/greenrobot/greenDAO
    implementation 'org.greenrobot:greendao:3.3.0'//数据库

    //https://github.com/promeG/TinyPinyin
    implementation 'com.github.promeg:tinypinyin:2.0.3'//TinyPinyin核心包，约80KB
    //可选，适用于Android的中国地区词典
    //implementation 'com.github.promeg:tinypinyin-lexicons-android-cncity:2.0.3'

    //https://wiki.connect.qq.com/sdk%E4%B8%8B%E8%BD%BD QQ登录等v3.3.7
    implementation files('libs/open_sdk_r2973327_lite.jar')

    //https://bintray.com/wechat-sdk-team/maven 微信登录支付,不包含统计功能
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:5.5.8'

    //http://lbs.baidu.com/index.php?title=sdk/download&action#selected=location_all 百度定位/地图/检索 等
    implementation files('libs/BaiduLBS_aar_android_V1.1.9_100665344.aar')

    //https://docs.jiguang.cn//jpush/client/Android/android_guide/ 极光推送
    //http://docs.jiguang.cn/jpush/updates/ 最新版本号
    implementation 'cn.jiguang.sdk:jpush:3.6.6'
    implementation 'cn.jiguang.sdk:jcore:2.3.8'

    //https://github.com/yanzhenjie/Album 图片选择
    implementation 'com.yanzhenjie:album:2.1.3'
}
